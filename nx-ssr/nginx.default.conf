http {
  upstream nx-ssr_server {
      server 127.0.0.1:4200;
  }

  proxy_cache_path /data/nginx/cache keys_zone=mycache:10m loader_threshold=300
                     loader_files=200 max_size=200m;

  server {
    listen 8080;
    server_name localhost;
    proxy_cache mycache;

    include mime.types;
    types
    {
      application/javascript mjs;
    }

    # HTTP traffic to HTTPS
    return 301 https://$host$request_uri;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=limit_zone:10m rate=10r/s;
    limit_req zone=limit_zone burst=20;

    # Request filtering
    if ($request_uri ~* (\.git|\.svn)) {
        return 404;
    }

    location /assets/ {
        alias /usr/share/nginx/html/public/;
        
        # compression
        gzip_static on;
        brotli on;
        brotli_static on;
        brotli_comp_level 4;
        # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        
        expires max;
        add_header Cache-Control public;
    }

    location / {
        proxy_pass http://node_app_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}